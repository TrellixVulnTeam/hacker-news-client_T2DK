{"version":3,"sources":["app.js"],"names":["ajax","XMLHttpRequest","NEWS_URL","container","document","querySelector","postsPerPage","store","currentPage","getData","url","open","send","JSON","parse","response","getNewsFeed","newsFeed","lastPage","parseInt","length","source","list","slice","prev_page","next_page","i","individual_url","id","template","Handlebars","compile","innerHTML","getIndividualContents","CONTENT_URL","contents","title","domain","points","user","time_ago","comments_count","makeComments","comments","called","commentString","push","content","join","router","hash","location","substr","Number","window","addEventListener"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["// Hacker News 피드 정보 가져오기\r\nconst ajax = new XMLHttpRequest();\r\nconst NEWS_URL = \"https://api.hnpwa.com/v0/news/1.json\";\r\nconst container = document.querySelector(\".container\");\r\nconst postsPerPage = 8; // 1페이지 당 게시물 수\r\nlet store = {};\r\nlet currentPage = 1;\r\n\r\nfunction getData(url) {\r\n  ajax.open(\"GET\", url, false);\r\n  ajax.send();\r\n  return JSON.parse(ajax.response);\r\n}\r\n\r\n// newsFeed 불러오기\r\nfunction getNewsFeed() {\r\n  const newsFeed = getData(NEWS_URL);\r\n  const lastPage = parseInt(newsFeed.length / postsPerPage) + 1;\r\n\r\n  const source = `\r\n    <ul>\r\n      {{#each list}}\r\n      <li>\r\n        <h3><a href=\"{{url}}\">{{title}} ({{domain}})</a></h3>\r\n        <div>\r\n          <span>{{points}} points by {{user}} {{time_ago}}</span>\r\n          <a href=\"{{individual_url}}\"><div id=\"comments\"><i class=\"far fa-comment\"></i>{{comments_count}} comments</div></a>\r\n        </div>\r\n      </li>\r\n      {{/each}}\r\n    </ul> \r\n    <div class=\"page\">\r\n        <a href=\"#news?p={{prev_page}}\"><span>Prev</span></a>\r\n        <a href=\"#news?p={{next_page}}\"><span>Next</span></a>\r\n    </div>\r\n    `;\r\n\r\n  store = {\r\n    list: newsFeed.slice((currentPage - 1) * postsPerPage, currentPage * postsPerPage),\r\n    // 이전 페이지, 다음 페이지 구현(삼항 조건 연산자 사용)\r\n    prev_page: currentPage > 1 ? currentPage - 1 : currentPage,\r\n    next_page: currentPage < lastPage ? currentPage + 1 : lastPage,\r\n  };\r\n\r\n  // ✅postsPerPage이 나누어떨어지는 숫자가 아닐때, 마지막 페이지 출력되지 않는 error 해결\r\n  // ✅i < newsFeed.length로 잘못 구현함.\r\n  // newsFeed를 slice 해서 이미 새로운(index도 새로워짐) newsFeed 배열을 만들었으므로,\r\n  // 이제는 newsFeed 대신 store.list를 사용해야 된다.\r\n  for (let i = 0; i < store.list.length; i++) {\r\n    store.list[i].individual_url = `#item?id=${store.list[i].id}`;\r\n  }\r\n\r\n  let template = Handlebars.compile(source);\r\n  container.innerHTML = template(store);\r\n}\r\n\r\n// 클릭한 글의 id를 전달해서 콘텐츠 화면 불러오기\r\nfunction getIndividualContents(id) {\r\n  const CONTENT_URL = `https://api.hnpwa.com/v0/item/${id}/json`;\r\n  const contents = getData(CONTENT_URL);\r\n  const source = `\r\n  <div class=\"title\">\r\n    <h1>\r\n      <a href=\"{{url}}\">{{title}} ({{domain}})</a>\r\n    </h1>\r\n    <div>\r\n    <span>{{points}} points by {{user}} {{time_ago}}</span>\r\n    <div id=\"comments\"><i class=\"far fa-comment\"></i>{{comments_count}} comments</div>\r\n    </div>\r\n  </div>\r\n\r\n  <ul id=\"comments-list\">\r\n  </ul>\r\n  `;\r\n\r\n  store = {\r\n    title: contents.title,\r\n    url: contents.url,\r\n    domain: contents.domain,\r\n    points: contents.points,\r\n    user: contents.user,\r\n    time_ago: contents.time_ago,\r\n    comments_count: contents.comments_count,\r\n  };\r\n\r\n  const template = Handlebars.compile(source);\r\n  container.innerHTML = template(store);\r\n\r\n  // comments의 html을 ul의 innerHTML으로 넣기\r\n  function makeComments(comments, called = 0) {\r\n    const commentString = [];\r\n    for (let i = 0; i < comments.length; i++) {\r\n      commentString.push(`\r\n        <li>\r\n          <div id=\"comment-info\" style = \"padding-left: ${called * 2.5}rem\"}><i class=\"far fa-comment-alt\"></i>${comments[i].user} ${comments[i].time_ago}</div>\r\n          <div style = \"padding-left: ${called * 2.5}rem\">${comments[i].content}</div>\r\n        </li> \r\n    `);\r\n      if (comments[i].comments_count > 0) {\r\n        commentString.push(makeComments(comments[i].comments, called + 1));\r\n      }\r\n    }\r\n    return commentString.join(\"\");\r\n  }\r\n\r\n  document.querySelector(\".container ul\").innerHTML = makeComments(contents.comments);\r\n}\r\n\r\n// 라우터 구현\r\nfunction router() {\r\n  const hash = location.hash;\r\n  if (hash === \"\") {\r\n    getNewsFeed();\r\n  } else if (hash.substr(1, 7) === \"news?p=\") {\r\n    // currentPage 갱신\r\n    currentPage = Number(hash.substr(8));\r\n    getNewsFeed();\r\n  } else {\r\n    getIndividualContents(hash.substr(9, location.hash.length));\r\n  }\r\n}\r\nwindow.addEventListener(\"hashchange\", router);\r\nrouter();\r\n"]}